package Main;

import java.util.TreeMap;

public class MainFrame extends javax.swing.JFrame {

    private final Dictionary<TreeMap<String, String>> dict;
    public MainFrame(Dictionary<TreeMap<String, String>> dict) {       
        this.dict = dict;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        meaningOutput = new javax.swing.JTextArea();
        wordInput = new javax.swing.JTextField();
        firstLanguageLabel = new javax.swing.JLabel();
        secondLanguageLabel = new javax.swing.JLabel();
        swapButton = new javax.swing.JButton();
        lookUpButton = new javax.swing.JButton();
        addWordButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        meaningInput = new javax.swing.JTextArea();
        deleteWordButton = new javax.swing.JButton();
        favoriteButton = new javax.swing.JButton();
        favoriteLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        favoriteList = new javax.swing.JTextArea();
        sortButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dictionary");
        setAlwaysOnTop(true);

        meaningOutput.setColumns(10);
        meaningOutput.setLineWrap(true);
        meaningOutput.setRows(5);
        jScrollPane1.setViewportView(meaningOutput);

        firstLanguageLabel.setText("Tiếng Việt");

        secondLanguageLabel.setText("Tiếng Anh");

        swapButton.setText("Chuyển đổi");
        swapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swapButtonActionPerformed(evt);
            }
        });

        lookUpButton.setText("Tra cứu");
        lookUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lookUpButtonActionPerformed(evt);
            }
        });

        addWordButton.setText("Thêm từ");
        addWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordButtonActionPerformed(evt);
            }
        });

        meaningInput.setColumns(20);
        meaningInput.setLineWrap(true);
        meaningInput.setRows(5);
        meaningInput.setText("Nhập nghĩa để thêm...");
        meaningInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                meaningInputFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(meaningInput);

        deleteWordButton.setText("Xóa từ");
        deleteWordButton.setMaximumSize(new java.awt.Dimension(72, 22));
        deleteWordButton.setMinimumSize(new java.awt.Dimension(72, 22));
        deleteWordButton.setPreferredSize(new java.awt.Dimension(72, 22));
        deleteWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWordButtonActionPerformed(evt);
            }
        });

        favoriteButton.setText("♥");
        favoriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favoriteButtonActionPerformed(evt);
            }
        });

        favoriteLabel.setText("Từ yêu thích:");

        favoriteList.setEditable(false);
        favoriteList.setColumns(20);
        favoriteList.setLineWrap(true);
        favoriteList.setRows(5);
        jScrollPane3.setViewportView(favoriteList);

        sortButton.setText("A-Z");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(firstLanguageLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(wordInput)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(favoriteLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(swapButton, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(lookUpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addWordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteWordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(favoriteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(secondLanguageLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secondLanguageLabel)
                    .addComponent(firstLanguageLabel)
                    .addComponent(swapButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lookUpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(wordInput))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addWordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteWordButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(favoriteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(favoriteLabel)
                    .addComponent(sortButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void swapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swapButtonActionPerformed
        // TODO add your handling code here:       
        firstLanguageLabel.setText(secondLanguageLabel.getText());
        secondLanguageLabel.setText(this.dict.switchLanguage());
    }//GEN-LAST:event_swapButtonActionPerformed

    private void lookUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lookUpButtonActionPerformed
        // TODO add your handling code here:
        meaningOutput.setText(this.dict.findWord(wordInput.getText().toLowerCase())); 
    }//GEN-LAST:event_lookUpButtonActionPerformed

    private void meaningInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_meaningInputFocusGained
        // TODO add your handling code here:
        meaningInput.setText("");
    }//GEN-LAST:event_meaningInputFocusGained

    private void addWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWordButtonActionPerformed
        // TODO add your handling code here:
        this.dict.addWord(wordInput.getText(), meaningInput.getText());
        meaningInput.setText("Nhập nghĩa để thêm...");
        
    }//GEN-LAST:event_addWordButtonActionPerformed

    private void deleteWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWordButtonActionPerformed
        // TODO add your handling code here:
        meaningOutput.setText(this.dict.deleteWord(wordInput.getText()));
    }//GEN-LAST:event_deleteWordButtonActionPerformed

    private void favoriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favoriteButtonActionPerformed
        // TODO add your handling code here:
        dict.addToFavorites(wordInput.getText());
        favoriteList.setText(this.dict.favoriteWordsToString());
    }//GEN-LAST:event_favoriteButtonActionPerformed

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        // TODO add your handling code here:
        if ("A-Z".equals(sortButton.getText())) {
            dict.sortFavoritesAscending();
            sortButton.setText("Z-A");
            favoriteList.setText(this.dict.favoriteWordsToString());
        }
        else {
            dict.sortFavoritesDescending();
            sortButton.setText("A-Z");
            favoriteList.setText(this.dict.favoriteWordsToString());
        }
    }//GEN-LAST:event_sortButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWordButton;
    private javax.swing.JButton deleteWordButton;
    private javax.swing.JButton favoriteButton;
    private javax.swing.JLabel favoriteLabel;
    private javax.swing.JTextArea favoriteList;
    private javax.swing.JLabel firstLanguageLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton lookUpButton;
    private javax.swing.JTextArea meaningInput;
    private javax.swing.JTextArea meaningOutput;
    private javax.swing.JLabel secondLanguageLabel;
    private javax.swing.JButton sortButton;
    private javax.swing.JButton swapButton;
    private javax.swing.JTextField wordInput;
    // End of variables declaration//GEN-END:variables
}
